##Script de DAG para Desafio do Fast Track edição Set/2021
##Desafio PagSeguro

# IMPORTS
from airflow import DAG
from airflow.operators.python import PythonOperator
from datetime import datetime
import pandas as pd
from datetime import datetime
from kaggle.api.kaggle_api_extended import KaggleApi
import zipfile

def importar_dataset():
    # Importação dos dados e descompactação
    api = KaggleApi()
    api.authenticate()
    api.dataset_download_file('ealaxi/banksim1', file_name='bs140513_032310.csv', force=False)

    with zipfile.ZipFile('bs140513_032310.csv.zip', 'r') as zipref:
        zipref.extractall()

def criar_df():
    return pd.read_csv('bs140513_032310.csv.zip', delimiter=',', quotechar="'", index_col=False)
    
def limpeza_dados(df):
    # Transforma data type da coluna age em int
    df["age"].mask(df["age"]=='U', 0, inplace=True)
    df["age"]=df["age"].astype('int')

    # Limpa coluna gender para somente M e F ou None
    df["gender"].where((df["gender"]=="M") | (df["gender"]=="F"), None, inplace=True)

    # Substitui os 0 em amount por Null
    df["amount"].mask(df["amount"]==0, None, inplace=True)    

    

def tratamento_df():
    transactions_csv = criar_df()
    limpeza_dados(transactions_csv)

############################################################################################################################################
with DAG("chlg_pagseguro_dag", start_date=datetime(2021, 1, 1), schedule_interval='@daily', catchup=False) as dag:
    get_data = PythonOperator(
        task_id="get_data",
        python_callable=importar_dataset
    )

    treat_data = PythonOperator(
        task_id="treat_data",
        python_callable=tratamento_df
    )

    get_data >> treat_data